version: "3.7"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-server:5.5.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://35.222.22.198:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  service-discovery:
    image: nikolahristovski/service-registry:0.0.1-SNAPSHOT
    container_name: service-registry
    depends_on:
      - broker
  config-server:
    image: nikolahristovski/config_server:0.0.1-SNAPSHOT
    container_name: config-server
    depends_on:
      - service-discovery
  api-gateway:
    image: nikolahristovski/api-gateway:0.0.1-SNAPSHOT
    container_name: api-gateway
    depends_on:
      - service-discovery
      - config-server
  auth:
    image: nikolahristovski/auth:0.0.1-SNAPHOST
    container_name: auth
    depends_on:
      - service-discovery
      - config-server
  product:
    image: nikolahristovski/product:0.0.1-SNAPSHOT
    container_name: product
    depends_on:
      - service-discovery
      - postgres-products
      - config-server
  postgres-product:
    image: postgres
    container_name: pgproduct
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
  user:
    image: nikolahristovski/user:0.0.1-SNAPHOST
    container_name: user
    depends_on:
      - service-discovery
      - postgres-users
      - config-server
  postgres-user:
    image: postgres
    container_name: pguser
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
  shopping-cart:
    image: nikolahristovski/shopping_cart:0.0.1-SNAPHOST
    container_name: shopping-cart
    depends_on:
      - service-discovery
      - postgres-shopping-cart
      - config-server
  postgres-shopping-cart:
    image: postgres
    container_name: pgshoppingcart
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
  rating:
    image: nikolahristovski/rating:0.0.1-SNAPHOST
    container_name: rating
    depends_on:
      - service-discovery
      - postgres-rating
      - config-server
  postgres-rating:
    image: postgres
    container_name: pgrating
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
  payment:
    image: nikolahristovski/payment:0.0.1-SNAPHOST
    container_name: payment
    depends_on:
      - service-discovery
      - config-server
  order:
    image: nikolahristovski/order:0.0.1-SNAPHOST
    container_name: order
    depends_on:
      - service-discovery
      - postgres-order
      - config-server
  postgres-order:
    image: postgres
    container_name: pgorder
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
  inventory:
    image: nikolahristovski/inventory:0.0.1-SNAPHOST
    container_name: inventory
    depends_on:
      - service-discovery
      - postgres-inventory
      - config-server
  postgres-inventory:
    image: postgres
    container_name: pginventory
    environment:
      POSTGRES_USER: postgres
  frontend:
    image: nikolahristovski/frontend:0.0.1
    container_name: frontend
    depends_on:
      - service-discovery
      - config-server
      - api-gateway
      - auth
      - product
      - user
      - shopping-cart
      - rating
      - payment
      - order
      - inventory
    ports:
      - 18666:80
